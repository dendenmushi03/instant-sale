<!doctype html>
<html lang="ja">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Upload | Instant Sale</title>
  <link rel="stylesheet" href="/public/style.css" />
  <style>
    .setup{display:grid;gap:12px;margin:12px 0}
    .setup__item{display:flex;align-items:center;gap:12px;padding:12px;border:1px solid rgba(255,255,255,.12);border-radius:10px;background:rgba(255,255,255,.03)}
    .setup__status{font-size:20px;min-width:24px;text-align:center}
    .setup__body{flex:1}
    .setup__title{font-weight:700}
    .setup__desc{opacity:.85;font-size:.95em}
  </style>
</head>

<body class="layout">

<header class="nav">
  <a class="nav__brand" href="/">
    <img class="nav__logo" src="/public/logo.png" alt="Instant Sale" width="28" height="28" loading="eager" decoding="async" />
    <span class="nav__brandText">Instant Sale</span>
  </a>
  <nav class="nav__right">
    <% if (me) { %>
      <span class="nav__user"><%= me.name || me.email %></span>
      <form method="post" action="/logout" class="inline">
        <button class="btn btn--ghost">ログアウト</button>
      </form>
    <% } else { %>
      <a class="btn btn--ghost" href="/auth/google">Googleでログイン</a>
    <% } %>
  </nav>
</header>
  
  <main class="container">
    <h1>即販売リンクを作る</h1>

<% if (typeof connect !== 'undefined') {
     const connectReady = !!(connect.hasAccount && connect.payoutsEnabled);
     const lr = (typeof legalReady !== 'undefined') ? !!legalReady : false;
     const biz = (typeof isBiz !== 'undefined') ? !!isBiz : false;
     if (!connectReady || (biz && !lr)) { %>
  <div class="alert alert--error" role="status" aria-live="polite" style="margin-top:12px;">
    <strong>受取設定が未完了です。</strong><br>
    <% if (!connectReady) { %>・振込口座の登録（Stripe）と本人確認を完了してください。<br><% } %>
    <% if (biz && !lr) { %>・（事業者のみ）販売者情報の必須項目を登録し、掲載に同意してください。<br><% } %>
  </div>
<%   }
   } %>

<% if (typeof connect !== 'undefined') { 
     const connectReady = !!(connect.hasAccount && connect.payoutsEnabled);
     const lr = (typeof legalReady !== 'undefined') ? !!legalReady : false;
     const biz = (typeof isBiz !== 'undefined') ? !!isBiz : false;
%>
  <section class="setup">

    <!-- ① 振込口座（Stripe） -->
    <div class="setup__item">
      <div class="setup__status"><%= connectReady ? '✅' : '⏳' %></div>
      <div class="setup__body"></div>
      <a class="btn btn--primary" href="/connect/onboard">
        <%= connectReady ? '確認/更新（Stripe）' : '振込口座を登録（Stripe）' %>
      </a>
    </div>

    <!-- ② 販売者情報（特商法）：個人は完了扱い -->
    <div class="setup__item">
      <div class="setup__status">
        <%= biz ? (lr ? '✅' : '⏳') : '✅' %>
      </div>
      <div class="setup__body"></div>
      <a class="btn btn--primary" href="/creator/legal">
        <%= biz ? (lr ? '確認/編集' : '販売者情報を登録') : '任意で編集' %>
      </a>
    </div>

  </section>
<% } %>
   
    <form class="card" action="/upload" method="post" enctype="multipart/form-data">
      <label>タイトル
        <input type="text" name="title" placeholder="作品タイトル" required />
      </label>
      <div class="row">
<label style="flex:1">価格（<%= (process.env.CURRENCY || 'jpy').toUpperCase() %>）
  <input type="number" name="price" min="<%= process.env.MIN_PRICE || 50 %>" step="1" value="50" required />
</label>
        <label style="flex:1">通貨
          <input type="text" name="currency" value="<%= (process.env.CURRENCY || 'jpy') %>" />
        </label>
      </div>
      <label>クリエイター名（任意）
        <input type="text" name="creatorName" placeholder="表示用の名前（任意）" />
      </label>
      <label>画像（高解像度ファイル）
        <input type="file" name="image" accept="image/*" required />
      </label>
      <label>
  <input type="checkbox" name="attestOwner" required />
  私はこの画像の権利者（または正当に販売可能な権利保有者）です
</label>
      <button type="submit" class="btn primary">販売ページを作成</button>
    </form>

    <% if (typeof createdUrl !== 'undefined') { %>
      <div class="card success">
        <p>販売ページができました！</p>
        <p><a class="btn" href="<%= createdUrl %>" target="_blank"><%= createdUrl %></a></p>
        <p>このURLをX/Instagramに貼ると、OGP付きで見栄えよく表示されます。</p>
      </div>
    <% } %>
  </main>

<footer class="site-footer">
  <div class="footer__links">
    <a href="/terms">利用規約</a>
    <span class="dot">•</span>
    <a href="/privacy">プライバシーポリシー</a>
    <span class="dot">•</span>
    <a href="/tokushoho">特定商取引法に基づく表記</a>
  </div>
  <div class="footer__copy">© <%= new Date().getFullYear() %> Instant Sale</div>
</footer>

<!-- 成功表示（AJAX時にここへ描画） -->
<div id="ajaxResultBox" style="display:none;margin-top:16px;">
  <div style="background:#0f2a1a;border:1px solid #2d6a3f;border-radius:12px;padding:16px;color:#dafbe1;">
    <div style="font-weight:700;margin-bottom:8px;">販売ページができました！</div>
    <input id="ajaxResultUrl" type="text" readonly style="width:100%;background:#0b2015;border:1px solid #2d6a3f;border-radius:8px;padding:10px;color:#c9fdd7;">
    <p style="margin:10px 0 0;">このURLをX/Instagramに貼ると、OGP付きで見栄えよく表示されます。</p>
  </div>
</div>

<!-- 作成中モーダル -->
<div id="progressModal" aria-hidden="true" style="position:fixed;inset:0;background:rgba(0,0,0,.55);display:none;align-items:center;justify-content:center;z-index:9999;">
  <div style="width:min(520px,92vw);background:#0f1a2a;border:1px solid #314156;border-radius:12px;padding:20px 18px;box-shadow:0 8px 28px rgba(0,0,0,.35);color:#dbe7ff;">
    <h3 style="margin:0 0 8px;font-size:18px;">販売ページを作成しています…</h3>
    <p id="progressPhase" style="margin:0 0 12px;opacity:.9">アップロード中</p>
    <div style="height:10px;border-radius:6px;background:#18263a;overflow:hidden">
      <div id="progressBar" style="height:100%;width:0%;transition:width .25s ease"></div>
    </div>
    <p id="progressPct" style="margin:8px 0 0;text-align:right;font-variant-numeric:tabular-nums">0%</p>
  </div>
</div>

<script>
(function() {
  const form = document.querySelector('form[action="/upload"]');
  if (!form) return;

  form.addEventListener('submit', function (ev) {
    ev.preventDefault();

    const modal = document.getElementById('progressModal');
    const bar   = document.getElementById('progressBar');
    const pct   = document.getElementById('progressPct');
    const phase = document.getElementById('progressPhase');
    const resultBox = document.getElementById('ajaxResultBox');
    const resultUrl = document.getElementById('ajaxResultUrl');

    // 取得できなければ通常 submit にフォールバック
    if (!modal || !bar || !pct || !phase || !resultBox || !resultUrl) {
      form.submit();
      return;
    }

    // リセット & 表示
    resultBox.style.display = 'none';
    bar.style.width = '0%';
    pct.textContent = '0%';
    phase.textContent = 'アップロード中';
    modal.style.display = 'flex';

    const fd = new FormData(form);
    const xhr = new XMLHttpRequest();
    xhr.open('POST', form.action);
    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

    xhr.upload.onprogress = function (e) {
      if (!e.lengthComputable) return;
      const p = Math.min(70, Math.floor((e.loaded / e.total) * 70));
      bar.style.width = p + '%';
      pct.textContent = p + '%';
    };

    xhr.upload.onload = function () {
      phase.textContent = '画像処理・サムネ生成中';
      let v = parseInt(bar.style.width) || 70;
      const timer = setInterval(() => {
        if (v >= 95) return clearInterval(timer);
        v += 1;
        bar.style.width = v + '%';
        pct.textContent = v + '%';
      }, 120);
    };

    xhr.onreadystatechange = function () {
      if (xhr.readyState !== 4) return;
      try {
        const res = JSON.parse(xhr.responseText || '{}');
        if (xhr.status >= 200 && xhr.status < 300 && res.ok && res.createdUrl) {
          phase.textContent = '完了';
          bar.style.width = '100%';
          pct.textContent = '100%';
          setTimeout(() => {
            modal.style.display = 'none';
            resultUrl.value = res.createdUrl;
            resultBox.style.display = 'block';
            const file = form.querySelector('input[type="file"]');
            if (file) file.value = '';
            const chk = form.querySelector('input[type="checkbox"]');
            if (chk) chk.checked = false;
          }, 350);
        } else {
          throw new Error(res.message || 'サーバーエラーが発生しました。');
        }
      } catch (err) {
        modal.style.display = 'none';
        alert(err.message || 'アップロードに失敗しました。しばらくしてから再度お試しください。');
      }
    };

    xhr.onerror = function () {
      modal.style.display = 'none';
      alert('ネットワークエラーが発生しました。通信環境をご確認のうえ再度お試しください。');
    };

    xhr.send(fd);
  });
})();
</script>

</body>
</html>
